#!/bin/bash

# Tests that a service/deployment is accepting connections.
function ready {
    # TODO
    [[ "" != "" ]]
}

# Cleanup background jobs before exiting.
function cleanup {
    kill $(jobs -p)
    while ready; do
        printf "."
        sleep 1
    done
}
trap cleanup EXIT

if [[ $(command -v "kubectl") == "" ]]; then
    echo "aborting: could not locate 'kubectl'"
    exit 1
fi

if [[ $(command -v "skaffold") == "" ]]; then
    echo "aborting: could not locate 'skaffold'"
    exit 1
fi

skaffold dev &

until ready; do
    printf "."
    sleep 1
done

exit 0

# Helper scripts to manually invoke running services.

SIGNING="4000"
ANALYTICS="4001"

# Expose services on the host machine (in background jobs).
kubectl port-forward service/signing $SIGNING:80 &
kubectl port-forward service/analytics $ANALYTICS:80 &

# Wait for port forwarding to finish setting up.
sleep 0.5

# Sign a payload using the signing service.
PAYLOAD=$(cat <<EOF
    {
        "payload": {
            "question": {"id": "q123"},
            "answers": [
                {"id": "a123"},
                {"id": "a456"},
                {"id": "a789"}
            ]
        }
    }
EOF
)
TOKEN=$(curl -s -X "POST" -H "Content-Type: application/json" -d "$PAYLOAD" localhost:$SIGNING/sign | jq -r .token)

# Submit the token and a choice to the analytics service.
PAYLOAD=$(cat <<EOF
    {
        "token": "$TOKEN",
        "choice": "a000"
    }
EOF
)
curl -s -X "POST" -H "Content-Type: application/json" -d "$PAYLOAD" localhost:$ANALYTICS/submit
